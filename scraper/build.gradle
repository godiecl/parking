/*
 * MIT License
 *
 * Copyright (c) 2020 Diego Urrutia-Astorga <durrutia@ucn.cl>.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'io.freefair.lombok' version '5.1.0'
}

allprojects {
    // Use the temp directory to build temporals
    // buildDir = "${System.env.TEMP}//gradle-build//${rootProject.name}//${project.name}"
}

group 'cl.ucn.disc.pdis'
version '0.0.3'

// The java version code
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// Testing configuration
test {

    // Enable JUnit Platform (a.k.a. JUnit 5) support
    useJUnitPlatform()

    // failFast = true

    // Run the test in parallel
    systemProperty 'junit.jupiter.execution.parallel.enabled', 'true'
    systemProperty 'junit.jupiter.execution.parallel.mode.default', 'concurrent'
}

repositories {
    mavenCentral()
    google()
    jcenter()
}

dependencies {

    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0-M1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0-M1'

    // SLF4J
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha1'
    implementation 'org.fusesource.jansi:jansi:1.18'
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha5'
    // implementation 'org.slf4j:slf4j-simple:1.8.0-beta4'

    // Jsoup
    implementation "org.jsoup:jsoup:1.13.1"

    // JSON
    implementation 'com.google.code.gson:gson:2.8.6'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

}
